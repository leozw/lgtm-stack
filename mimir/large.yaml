alertmanager:
  persistentVolume:
    enabled: true
  replicas: 3
  resources:
    limits:
      memory: 1.4Gi
    requests:
      cpu: 1
      memory: 1Gi
  statefulSet:
    enabled: true

compactor:
  deletion_delay: 30d
  persistentVolume:
    size: 50Gi
  resources:
    limits:
      memory: 2.8Gi
    requests:
      cpu: 1
      memory: 2Gi

distributor:
  replicas: 12
  resources:
    limits:
      memory: 5.7Gi
    requests:
      cpu: 2
      memory: 4Gi

ingester:
  persistentVolume:
    size: 50Gi
  replicas: 27
  resources:
    limits:
      memory: 12Gi
    requests:
      cpu: 3.5
      memory: 8Gi
  topologySpreadConstraints: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: target # support for enterprise.legacyLabels
                operator: In
                values:
                  - ingester
          topologyKey: 'kubernetes.io/hostname'

        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - ingester
          topologyKey: 'kubernetes.io/hostname'

  zoneAwareReplication:
    topologyKey: 'kubernetes.io/hostname'

admin-cache:
  enabled: true
  replicas: 2

chunks-cache:
  enabled: true
  replicas: 4

index-cache:
  enabled: true
  replicas: 4

metadata-cache:
  enabled: true

results-cache:
  enabled: true
  replicas: 4
  allocatedMemory: 1024

minio:
  enabled: false

overrides_exporter:
  replicas: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

querier:
  replicas: 4
  resources:
    limits:
      memory: 8.5Gi
    requests:
      cpu: 2
      memory: 6Gi

query_frontend:
  replicas: 3
  resources:
    limits:
      memory: 2.8Gi
    requests:
      cpu: 2
      memory: 2Gi

ruler:
  replicas: 3
  resources:
    limits:
      memory: 5.7Gi
    requests:
      cpu: 1
      memory: 4Gi

store_gateway:
  persistentVolume:
    size: 50Gi
  replicas: 6
  resources:
    limits:
      memory: 8.5Gi
    requests:
      cpu: 1
      memory: 6Gi
  topologySpreadConstraints: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: target # support for enterprise.legacyLabels
                operator: In
                values:
                  - store-gateway
          topologyKey: 'kubernetes.io/hostname'

        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - store-gateway
          topologyKey: 'kubernetes.io/hostname'

  zoneAwareReplication:
    topologyKey: 'kubernetes.io/hostname'

nginx:
  replicas: 3
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 1
      memory: 512Mi

# Grafana Enterprise Metrics feature related
admin_api:
  replicas: 2
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

gateway:
  replicas: 3
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 1
      memory: 512Mi

  # structuredConfig:
  #   common:
  #     storage:
  #       backend: s3
  #       s3:
  #         bucket_name: "${BUCKET_NAME}"
  #         endpoint: "${BUCKET_HOST}:${BUCKET_PORT}"
  #         access_key_id: "${AWS_ACCESS_KEY_ID}" # This is a secret injected via an environment variable
  #         secret_access_key: "${AWS_SECRET_ACCESS_KEY}" # This is a secret injected via an environment variable
  #         http:
  #           insecure_skip_verify: true      